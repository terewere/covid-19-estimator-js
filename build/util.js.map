{"version":3,"sources":["../backend/util.js"],"names":["fs","require","getActualRequestDurationInMilliseconds","start","NS_PER_SEC","NS_TO_MS","diff","process","hrtime","demo","req","res","next","currentDatetime","Date","formattedDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","method","url","status","statusCode","durationInMilliseconds","log","toLocaleString","appendFile","err","console"],"mappings":"AAAA;AACA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEA,MAAMC,yCAA0CC,KAAD,IAAW;AACxD,QAAMC,aAAa,GAAnB,CADwD,CAChC;AACxB,QAAMC,WAAW,GAAjB,CAFwD,CAElC;AACtB,QAAMC,OAAOC,QAAQC,MAAR,CAAeL,KAAf,CAAb;AACA,SAAO,CAACG,KAAK,CAAL,IAAUF,UAAV,GAAuBE,KAAK,CAAL,CAAxB,IAAmCD,QAA1C;AACD,CALD;;AAQA,MAAMI,OAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC/B,QAAMC,kBAAkB,IAAIC,IAAJ,EAAxB;AACA,QAAMC,gBAAiB,GAAEF,gBAAgBG,WAAhB,EACxB,IACCH,gBAAgBI,QAAhB,KAA6B,CAC9B,IACCJ,gBAAgBK,OAAhB,EACD,IACCL,gBAAgBM,QAAhB,EACD,IACCN,gBAAgBO,UAAhB,EACD,IACCP,gBAAgBQ,UAAhB,EAA6B,EAV/B;AAWA,QAAM,EAAEC,MAAF,KAAaZ,GAAnB;AACA,QAAM,EAAEa,GAAF,KAAUb,GAAhB;AACA,QAAMc,SAASb,IAAIc,UAAnB;AACA,QAAMtB,QAAQI,QAAQC,MAAR,EAAd;AACA,QAAMkB,yBAAyBxB,uCAAuCC,KAAvC,CAA/B;AACA,QAAMwB,MAAO,IAAGZ,aAAc,KAAIO,MAAO,IAAGC,GAAI,IAAGC,MAAO,IAAGE,uBAAuBE,cAAvB,EAAwC,KAArG;;AAEA5B,KAAG6B,UAAH,CAAc,kBAAd,EAAmC,GAAEF,GAAI,IAAzC,EAA+CG,GAAD,IAAS;AACrD,QAAIA,GAAJ,EAAS;AACPC,cAAQJ,GAAR,CAAYG,GAAZ;AACD;AACF,GAJD;AAKAlB;AACD,CA1BD;;AA4BA,SACEV,sCADF,EAEEO,IAFF","file":"util.js","sourcesContent":["/* eslint-disable no-console */\nconst fs = require('fs');\n\nconst getActualRequestDurationInMilliseconds = (start) => {\n  const NS_PER_SEC = 1e9; // convert to nanoseconds\n  const NS_TO_MS = 1e6; // convert to milliseconds\n  const diff = process.hrtime(start);\n  return (diff[0] * NS_PER_SEC + diff[1]) / NS_TO_MS;\n};\n\n\nconst demo = (req, res, next) => {\n  const currentDatetime = new Date();\n  const formattedDate = `${currentDatetime.getFullYear()\n  }-${\n    currentDatetime.getMonth() + 1\n  }-${\n    currentDatetime.getDate()\n  } ${\n    currentDatetime.getHours()\n  }:${\n    currentDatetime.getMinutes()\n  }:${\n    currentDatetime.getSeconds()}`;\n  const { method } = req;\n  const { url } = req;\n  const status = res.statusCode;\n  const start = process.hrtime();\n  const durationInMilliseconds = getActualRequestDurationInMilliseconds(start);\n  const log = `[${formattedDate}] ${method}:${url} ${status} ${durationInMilliseconds.toLocaleString()} ms`;\n\n  fs.appendFile('request_logs.txt', `${log}\\n`, (err) => {\n    if (err) {\n      console.log(err);\n    }\n  });\n  next();\n};\n\nexport {\n  getActualRequestDurationInMilliseconds,\n  demo\n};\n"]}