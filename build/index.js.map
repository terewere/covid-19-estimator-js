{"version":3,"sources":["../backend/index.js"],"names":["express","xmlparser","xml","estimator","logger","xmlType","fs","require","cors","app","use","json","port","process","env","disable","set","static","builder","Builder","renderOpts","pretty","xmlOptions","charkey","trim","explicitRoot","explicitArray","normalizeTags","mergeAttrs","get","request","response","readFile","err","data","format","status","send","post","periodType","timeToElapse","reportedCases","population","totalHospitalBeds","body","input","region","name","avgAge","avgDailyIncomeInUSD","avgDailyIncomePopulation","output","isXml","buildObject","listen","console","log"],"mappings":"AAAA;;AAEA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,MAAME,MAAMT,SAAZ;AACAS,IAAIC,GAAJ,CAAQV,QAAQW,IAAR,EAAR;AACAF,IAAIC,GAAJ,CAAQN,MAAR;AACAK,IAAIC,GAAJ,CAAQF,MAAR;;AAEA,MAAMI,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAH,IAAIM,OAAJ,CAAY,cAAZ;AACAN,IAAIO,GAAJ,CAAQ,MAAR,EAAgBJ,IAAhB;AACAH,IAAIC,GAAJ,CAAQV,QAAQiB,MAAR,CAAe,KAAf,CAAR;;AAEA,MAAMC,UAAU,IAAIhB,IAAIiB,OAAR,CAAgB;AAC9BC,cAAY,EAAEC,QAAQ,KAAV;AADkB,CAAhB,CAAhB;;AAKA,MAAMC,aAAa;AACjBC,WAAS,OADQ;AAEjBC,QAAM,KAFW;AAGjBC,gBAAc,KAHG;AAIjBC,iBAAe,KAJE;AAKjBC,iBAAe,KALE;AAMjBC,cAAY;AANK,CAAnB;;AASAnB,IAAIoB,GAAJ,CAAQ,0BAAR,EAAoC,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACzDzB,KAAG0B,QAAH,CAAY,kBAAZ,EAAgC,MAAhC,EAAwC,CAACC,GAAD,EAAMC,IAAN,KAAe;AACrD,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACT,WAAOF,SAASI,MAAT,CAAgB;AACrB,oBAAc,MAAM;AAClBJ,iBAASK,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BH,IAA1B;AACD;AAHoB,KAAhB,CAAP;AAKD,GAPD;AAQD,CATD;AAUAzB,IAAIoB,GAAJ,CAAQ,QAAR,EAAkB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACvCA,WAASM,IAAT,CAAc,QAAd;AACD,CAFD;;AAIA5B,IAAI6B,IAAJ,CAAS,4BAAT,EAAuCjC,OAAvC,EAAgDJ,UAAUqB,UAAV,CAAhD,EAAuE,CAACQ,OAAD,EAAUC,QAAV,KAAuB;AAC5F,QAAM;AACJQ,cADI;AAEJC,gBAFI;AAGJC,iBAHI;AAIJC,cAJI,EAIQC;AAJR,MAKDb,QAAQc,IALb;;AAOA,QAAMC,QAAQ;AACZC,YAAQ;AACNC,YAAM,QADA;AAENC,cAAQ,IAFF;AAGNC,2BAAqB,CAHf;AAINC,gCAA0B;AAJpB,KADI;AAOZX,cAPY;AAQZC,gBARY;AASZC,iBATY;AAUZC,cAVY;AAWZC;AAXY,GAAd;;AAcA,QAAMQ,SAAShD,UAAU0C,KAAV,CAAf;;AAEA,MAAIf,QAAQrB,GAAR,CAAY2C,KAAhB,EAAuB;AACrB,WAAOrB,SAASI,MAAT,CAAgB;AACrB,yBAAmB,MAAM;AACvBJ,iBAASK,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BnB,QAAQmC,WAAR,CAAoB,EAAElD,WAAWgD,MAAb,EAApB,CAA1B;AACD;AAHoB,KAAhB,CAAP;AAKD;AACD,SAAOpB,SAASI,MAAT,CAAgB;AACrB,wBAAoB,MAAM;AACxBJ,eAASK,MAAT,CAAgB,GAAhB,EAAqBzB,IAArB,CAA0BwC,MAA1B;AACD;AAHoB,GAAhB,CAAP;AAKD,CApCD;;AAuCA1C,IAAI6C,MAAJ,CAAW1C,IAAX,EAAiB,MAAM2C,QAAQC,GAAR,CAAY,gBAAZ,CAAvB","file":"index.js","sourcesContent":["/* eslint-disable no-console */\n\nimport express from 'express';\nimport xmlparser from 'express-xml-bodyparser';\nimport xml from 'xml2js';\nimport estimator from '../src/estimator';\nimport logger from './middlewares/logger';\nimport xmlType from './middlewares/xml-type';\n\nconst fs = require('fs');\nconst cors = require('cors');\n\nconst app = express();\napp.use(express.json());\napp.use(logger);\napp.use(cors());\n\nconst port = process.env.port || 3000;\napp.disable('x-powered-by');\napp.set('port', port);\napp.use(express.static('src'));\n\nconst builder = new xml.Builder({\n  renderOpts: { pretty: false }\n});\n\n\nconst xmlOptions = {\n  charkey: 'value',\n  trim: false,\n  explicitRoot: false,\n  explicitArray: false,\n  normalizeTags: false,\n  mergeAttrs: true\n};\n\napp.get('/api/v1/on-covid-19/logs', (request, response) => {\n  fs.readFile('request_logs.txt', 'utf8', (err, data) => {\n    if (err) throw err;\n    return response.format({\n      'text/plain': () => {\n        response.status(200).send(data);\n      }\n    });\n  });\n});\napp.get('/covid', (request, response) => {\n  response.send('salaam');\n});\n\napp.post('/api/v1/on-covid-19/:type?', xmlType, xmlparser(xmlOptions), (request, response) => {\n  const {\n    periodType,\n    timeToElapse,\n    reportedCases,\n    population, totalHospitalBeds\n  } = (request.body);\n\n  const input = {\n    region: {\n      name: 'Africa',\n      avgAge: 19.7,\n      avgDailyIncomeInUSD: 5,\n      avgDailyIncomePopulation: 0.71\n    },\n    periodType,\n    timeToElapse,\n    reportedCases,\n    population,\n    totalHospitalBeds\n  };\n\n  const output = estimator(input);\n\n  if (request.app.isXml) {\n    return response.format({\n      'application/xml': () => {\n        response.status(200).send(builder.buildObject({ estimator: output }));\n      }\n    });\n  }\n  return response.format({\n    'application/json': () => {\n      response.status(200).json(output);\n    }\n  });\n});\n\n\napp.listen(port, () => console.log('App is running'));\n"]}